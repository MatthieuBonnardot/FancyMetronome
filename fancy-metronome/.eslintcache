[{"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/index.js":"1","/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/reportWebVitals.js":"2","/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/Components/ValueChanger.tsx":"3","/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/Components/OscillatorChanger.tsx":"4","/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/Components/Button.tsx":"5","/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/App.tsx":"6"},{"size":835,"mtime":1611596630795,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611397994500,"results":"9","hashOfConfig":"8"},{"size":1051,"mtime":1611573401475,"results":"10","hashOfConfig":"8"},{"size":514,"mtime":1611414119706,"results":"11","hashOfConfig":"8"},{"size":296,"mtime":1611573998730,"results":"12","hashOfConfig":"8"},{"size":2433,"mtime":1611586662587,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q2o3kw",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/index.js",[],"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/reportWebVitals.js",[],["30","31"],"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/Components/ValueChanger.tsx",[],["32","33"],"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/Components/OscillatorChanger.tsx",[],["34","35"],"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/Components/Button.tsx",[],"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/App.tsx",["36"],"import { useState, useEffect } from \"react\";\nimport Metronome from \"simple-beats\";\nimport \"./App.css\";\nimport Button from \"./Components/Button\";\nimport ValueChanger from \"./Components/ValueChanger\";\ninterface Props {\n  DefaultBPM: number;\n  DefaultFreq: number;\n  DefaultGain: number;\n  SoundClip: string;\n}\nconst App: React.FC<Props> = ({\n  DefaultBPM,\n  DefaultFreq,\n  DefaultGain,\n  SoundClip,\n}) => {\n  const [metronome, setMetronome] = useState<any>();\n  const [isPlaying, setPlaying] = useState<boolean>(false);\n  const [playButton, setPlayButton] = useState<string>(\"fas fa-play\");\n  const [BPM, setBPM] = useState<number>(DefaultBPM);\n  const [frequency, setFrequency] = useState<number>(DefaultFreq);\n  const [gain, setGain] = useState<number>(DefaultGain);\n\n  useEffect(() => {\n    const run = (): void => {\n      const newMetronome = new Metronome(BPM, frequency);\n      newMetronome.loadSamples([SoundClip]);\n      setMetronome(newMetronome);\n    };\n    run();\n  }, []);\n\n  const HandlePlayingChange = (): void => {\n    console.log(isPlaying);\n    if (isPlaying) {\n      metronome.stop();\n      setPlayButton(\"fas fa-play\");\n      setPlaying(false);\n    } else if (!isPlaying) {\n      metronome.start();\n      setPlayButton(\"fas fa-pause\");\n      setPlaying(true);\n    }\n  };\n\n  const HandleBPMChange = (e: number): void => {\n    metronome.BPM = e;\n\n    setBPM(e);\n  };\n\n  const HandleFrequencyChange = (e: number): void => {\n    metronome.frequency = frequency;\n    setFrequency(e);\n  };\n\n  const HandleGainChange = (e: number): void => {\n    console.log(e);\n    metronome.gain = e;\n    setGain(e);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <Button onChangeMethod={HandlePlayingChange} btn={playButton}></Button>\n        <div className=\"changers\">\n          <ValueChanger\n            onChangeMethod={HandleBPMChange}\n            name={\"BPM\"}\n            value={BPM}\n            maxValue={270}\n            minValue={10}\n          />\n\n          <ValueChanger\n            onChangeMethod={HandleFrequencyChange}\n            name={\"FREQ\"}\n            value={frequency}\n            maxValue={500}\n            minValue={40}\n          />\n          <ValueChanger\n            onChangeMethod={HandleGainChange}\n            name={\"GAIN\"}\n            value={gain}\n            maxValue={1}\n            minValue={0}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"37","replacedBy":"41"},{"ruleId":"39","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":32,"column":6,"nodeType":"45","endLine":32,"endColumn":8,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],["47"],["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BPM', 'SoundClip', and 'frequency'. Either include them or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [BPM, SoundClip, frequency]",{"range":"52","text":"53"},[978,980],"[BPM, SoundClip, frequency]"]