[{"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/index.js":"1","/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/App.js":"2","/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/reportWebVitals.js":"3","/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/Components/ValueChanger.tsx":"4"},{"size":500,"mtime":1611397994499,"results":"5","hashOfConfig":"6"},{"size":1541,"mtime":1611401762766,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611397994500,"results":"8","hashOfConfig":"6"},{"size":628,"mtime":1611401277578,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1q2o3kw",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/index.js",[],["21","22"],"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/App.js",["23"],"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/reportWebVitals.js",[],"/Users/mcb/Desktop/Education/Codeworks Barcelona/Legacy/FancyMetronome/fancy-metronome/src/Components/ValueChanger.tsx",["24"],"import {useState} from 'react';\nimport './ValueChanger.css';\n\ninterface Props {\n    name: string,\n    onChangeMethod: Function,\n    type: string,\n    value: number\n}\n\n\n\nconst ValueChanger: React.FC<Props> = ({name, onChangeMethod, type, value}) => {\n\n    const increment = () => onChangeMethod(value+1);\n    const decrement = () => onChangeMethod(value-1);\n\n    return (\n        <div>\n            <h1>{name}</h1>\n            <button onClick={() => increment()}>:arrow-up</button>\n            <p>{value}</p>\n            <button onClick={() => decrement()}>:arrow-down</button>\n        </div>\n    )\n}\n\nexport default ValueChanger\n",["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":20,"nodeType":"33","messageId":"34","endLine":1,"endColumn":29},{"ruleId":"35","severity":1,"message":"36","line":1,"column":9,"nodeType":"33","messageId":"34","endLine":1,"endColumn":17},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]